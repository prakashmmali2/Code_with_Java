import java.util.Scanner;

class Node_creation {
    int val;
    Node_creation next;

    // Constructor for creating a new node
    public Node_creation(int val) {
        this.val = val;
        this.next = null;
    }
}

public class Main {
    public static Node_creation head;
    public static Node_creation tail;

    public static void insertAtTail(int val) {
        if (head == null) {
            Node_creation node = new Node_creation(val);
            head = node;
            tail = node;
        } else {
            tail.next = new Node_creation(val);
            tail = tail.next;
        }
    }

    public static void insertAtHead(int val) {
        if (head == null) {
            Node_creation node = new Node_creation(val);
            head = node;
            tail = node;
        } else {
            Node_creation temp = new Node_creation(val);
            temp.next = head;
            head = temp;
        }
    }

    static void insertAtIndex(int val, int index) {
        Node_creation newNode = new Node_creation(val);
        if (index == 0) {
            newNode.next = head;
            head = newNode;
            return;
        }
        Node_creation temp = head;
        for (int i = 0; temp != null && i < index - 1; i++) {
            temp = temp.next;
        }
        if (temp == null) {
            System.out.println("Invalid index");
            return;
        }
        newNode.next = temp.next;
        temp.next = newNode;
    }

    static void print_list(Node_creation head) {
        while (head != null) {
            System.out.print(head.val + " -> ");
            head = head.next;
        }
        System.out.println("null");
    }

    static int findTargetIndex(int target) {
        Node_creation current = head;
        int index = 0;
        while (current != null) {
            if (current.val == target) {
                return index; // Target found, return the index
            }
            current = current.next;
            index++;
        }
        return -1; // Target not found
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        insertAtTail(1);
        insertAtTail(2);
        insertAtTail(3);
        insertAtHead(4);
        insertAtHead(5);
        insertAtIndex(7, 2);
        print_list(head);

        // Example of finding the target index
        System.out.print("Enter a value to find its index : ");
        int target = sc.nextInt();
        int index = findTargetIndex(target);
        if (index != -1) {
            System.out.print("Value " + target + " found at index: " + index);
        } else {
            System.out.println("Value " + target + " not found in the list.");
        }
        
        sc.close();
    }
}
